/**
 * 
 */

package com.taotao.rest.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.taotao.mapper.TbItemCatMapper;
import com.taotao.pojo.TbItemCat;
import com.taotao.pojo.TbItemCatExample;
import com.taotao.pojo.TbItemCatExample.Criteria;
import com.taotao.rest.pojo.CatNode;
import com.taotao.rest.pojo.ItemCatResult;
import com.taotao.rest.service.ItemCatService;

/** 
* @author 作者 : 千客z
* @version 创建时间：2019年5月7日 下午8:28:47 
* 类说明 ：  商品类目展示
*/
@Service
public class ItemCatServiceImpl implements ItemCatService {
	@Autowired
	private TbItemCatMapper itemCatMapper;
	
	@Override
	public ItemCatResult getItemCatList() {
		//调用递归方法查询商品分类列表
				List catList = this.getItemCatList(0l);
				//返回结果
				ItemCatResult result = new ItemCatResult();
				result.setData(catList);
				return result;
	}
	/**迭代
	 * @param l
	 * @return
	 */
	private List getItemCatList(Long parentId) {
		//根据parentId查询列表
		TbItemCatExample example = new TbItemCatExample();
		//申明一个条件容纳容器
		Criteria criteria = example.createCriteria();
		//插入条件数据
		criteria.andParentIdEqualTo(parentId);
		//执行查询
		List<TbItemCat> list = itemCatMapper.selectByExample(example);
		List resultList = new ArrayList<>();
		//计数器
		int index =0;
		for (TbItemCat tbItemCat : list) {
			if(index>=14) {
				break;
			}
			//如果是父节点（不是叶节点）
			if (tbItemCat.getIsParent()) {
				CatNode node = new CatNode();
				node.setUrl("/products/"+tbItemCat.getName()+".html");
				//如果当前节点为第一级节点
				if (tbItemCat.getParentId() == 0) {
					node.setName("<a href='/products/"+tbItemCat.getName()+".html'>"+tbItemCat.getName()+"</a>");
					//第一级节点不能超过14个，index为计数器
					index++;
				} else {
					node.setName(tbItemCat.getName());
				}				
				node.setItems(getItemCatList(tbItemCat.getId()));  
				//把node添加到列表
				resultList.add(node);
			} else {
				//如果是叶子节点
				String item = "/products/"+tbItemCat.getId()+".html|" + tbItemCat.getName();
				resultList.add(item);
			}
		}
		return resultList;
	}

}
