package com.taotao.service.Impl;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.taotao.common.pojo.EUDataGridResult;
import com.taotao.common.pojo.TaotaoResult;
import com.taotao.common.utils.IDUtils;
import com.taotao.mapper.TbItemDescMapper;
import com.taotao.mapper.TbItemMapper;
import com.taotao.pojo.TbItemExample.Criteria;
import com.taotao.pojo.TbItem;
import com.taotao.pojo.TbItemDesc;
import com.taotao.pojo.TbItemExample;
import com.taotao.service.ItemService;
/**
 * 商品管理
* @author 作者 : 千客z
* @version 创建时间：2019年5月5日 下午11:26:06
 */
@Service
public class ItemServiceImpl implements ItemService {
	 
	@Autowired
	private TbItemMapper itemMapper;
	@Override
	public TbItem getItemById(long itemId) {
		//根据主键查询
		//itemMapper.selectByPrimaryKey(itemId);
		TbItemExample example=new TbItemExample();
		//根据条件查询
		Criteria criteria=example.createCriteria();
		//赋值
		criteria.andIdEqualTo(itemId);
		List<TbItem> list=itemMapper.selectByExample(example);  
		
		if(list!=null&&list.size()>0)
		{
			TbItem item=list.get(0);
			return item;
		}
		return null;
	}
	/* 商品列表查询
	 * @see com.taotao.service.ItemService#getItemList(long, long)
	 */
	@Override
	public EUDataGridResult getItemList(Integer page, Integer rows) {
				//查询商品列表
				TbItemExample example = new TbItemExample();
				//分页处理				  
				PageHelper.startPage(page, rows);
				List<TbItem> list = itemMapper.selectByExample(example);
				//创建一个返回值对象
				EUDataGridResult result = new EUDataGridResult();
				result.setRows(list);
				//取记录总条数
				PageInfo<TbItem> pageInfo = new PageInfo<>(list);
				result.setTotal(pageInfo.getTotal());				
				return result;
	}
	//商品添加
	@Autowired
	private TbItemDescMapper itemDescMapper;
	@Override
	public TaotaoResult createItem(TbItem item, String desc) {
		// 生成商品id
				long itemId = IDUtils.getItemId();
				// 补全TbItem属性
				item.setId(itemId);
				// '商品状态，1-正常，2-下架，3-删除'
				item.setStatus((byte) 1);
				// 创建时间和更新时间
				Date date = new Date();
				item.setCreated(date);
				item.setUpdated(date);
				// 插入商品信息
				itemMapper.insert(item);
				// 商品描述
				TbItemDesc itemDesc = new TbItemDesc();
				itemDesc.setItemId(itemId);
				itemDesc.setItemDesc(desc);
				itemDesc.setCreated(date);
				itemDesc.setUpdated(date);
				// 插入商品描述数据
				itemDescMapper.insert(itemDesc);

				return TaotaoResult.ok();
	}

}
